{"version":3,"sources":["Layout/MainHeader.module.css","UI/Card.module.css","components/Questions.module.css","UI/Button.module.css","components/Reducer.js","Layout/MainHeader.js","UI/Card.js","components/FinalScreen.js","components/Questions.js","UI/Button.js","components/FetchButton.js","components/Settings.js","App.js","index.js","components/Settings.module.css"],"names":["module","exports","initState","options","loading","question_category","question_difficulty","question_type","amount_of_questions","questions","index","score","Reducer","state","action","type","value","MainHeader","props","className","classes","header","Card","card","children","FinalScreen","useSelector","decodeHTML","html","txt","document","createElement","innerHTML","Question","useState","setQuestions","answerSelected","setAnswerSelected","selectedAnswer","setSelectedAnswer","setOptions","encodedQuestions","useEffect","decodedQuestions","map","q","question","correct_answer","incorrect_answers","a","questionIndex","dispatch","useDispatch","answer","max","answers","splice","length","Math","floor","random","handleListItemClick","event","target","textContent","setTimeout","console","log","getClass","option","i","onClick","Button","button","FetchButton","setLoading","questionCategory","questionDifficulty","questionType","questionAmount","handleQuery","apiUrl","concat","fetch","then","res","json","response","results","text","Settings","handleLoadingChange","trivia_categories","items","onChange","id","name","item","App","Questions","store","createStore","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.cd9bfbaf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__1VYwk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2nKG4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"question\":\"Questions_question__Pzvoy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1Nk4s\"};","const initState = {\n  options: {\n    loading: false,\n    question_category: ``,\n    question_difficulty: ``,\n    question_type: ``,\n    amount_of_questions: 10,\n  },\n  questions: [],\n  index: 0,\n  score: 0,\n};\n\nconst Reducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"CHANGE_LOADING\":\n      return {\n        ...state,\n        options: {\n          ...state.options,\n          loading: action.value,\n        },\n      };\n\n    case \"CHANGE_CATEGORY\":\n      return {\n        ...state,\n        options: {\n          ...state.options,\n          question_category: action.value,\n        },\n      };\n\n    case \"CHANGE_DIFFICULTY\":\n      return {\n        ...state,\n        options: {\n          ...state.options,\n          question_difficulty: action.value,\n        },\n      };\n\n    case \"CHANGE_TYPE\":\n      return {\n        ...state,\n        options: {\n          ...state.options,\n          question_type: action.value,\n        },\n      };\n\n    case \"CHANGE_AMOUNT\":\n      return {\n        ...state,\n        options: {\n          ...state.options,\n          amount_of_questions: action.value,\n        },\n      };\n    case \"SET_QUESTIONS\":\n      return {\n        ...state,\n        questions: action.questions,\n      };\n    case \"SET_INDEX\":\n      return {\n        ...state,\n        index: action.index,\n      };\n\n    case \"SET_SCORE\":\n      return {\n        ...state,\n        score: action.score,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default Reducer;\n","import classes from \"./MainHeader.module.css\";\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>Quiz</h1>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import classes from \"./Card.module.css\";\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : \"\"}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport Card from \"../UI/Card\";\n\nfunction FinalScreen() {\n  const score = useSelector((state) => state.score);\n\n  return (\n    <Card>\n      <h3>Your Score: {score}</h3>\n    </Card>\n  );\n}\nexport default FinalScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Card from \"../UI/Card\";\nimport classes from \"./Questions.module.css\";\n\nconst decodeHTML = function (html) {\n  const txt = document.createElement(\"textarea\");\n  txt.innerHTML = html;\n  return txt.value;\n};\n\nfunction Question(props) {\n  const [questions, setQuestions] = useState([]);\n  const [answerSelected, setAnswerSelected] = useState(false);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [options, setOptions] = useState([]);\n\n  const score = useSelector((state) => state.score);\n  const encodedQuestions = useSelector((state) => state.questions);\n\n  useEffect(() => {\n    const decodedQuestions = encodedQuestions.map((q) => {\n      return {\n        ...q,\n        question: decodeHTML(q.question),\n        correct_answer: decodeHTML(q.correct_answer),\n        incorrect_answers: q.incorrect_answers.map((a) => decodeHTML(a)),\n      };\n    });\n\n    setQuestions(decodedQuestions);\n  }, [encodedQuestions]);\n  const questionIndex = useSelector((state) => state.index);\n\n  const dispatch = useDispatch();\n\n  const question = questions[questionIndex];\n  const answer = question && question.correct_answer;\n\n  const getRandomInt = (max) => {\n    return Math.floor(Math.random() * Math.floor(max));\n  };\n\n  useEffect(() => {\n    if (!question) {\n      return;\n    }\n    let answers = [...question.incorrect_answers];\n    answers.splice(\n      getRandomInt(question.incorrect_answers.length),\n      0,\n      question.correct_answer\n    );\n\n    setOptions(answers);\n  }, [question]);\n\n  const handleListItemClick = (event) => {\n    setAnswerSelected(true);\n    setSelectedAnswer(event.target.textContent);\n\n    if (event.target.textContent === answer) {\n      dispatch({\n        type: \"SET_SCORE\",\n        score: score + 1,\n      });\n    }\n\n    if (questionIndex + 1 <= questions.length) {\n      setTimeout(() => {\n        setAnswerSelected(false);\n        setSelectedAnswer(null);\n\n        dispatch({\n          type: \"SET_INDEX\",\n          index: questionIndex + 1,\n        });\n      }, 500);\n    }\n    if (questionIndex + 1 === questions.length) {\n      console.log(\"fin\");\n    }\n  };\n\n  const getClass = (option) => {\n    if (!answerSelected) {\n      return ``;\n    }\n\n    if (option === answer) {\n      return `correct`;\n    }\n\n    if (option === selectedAnswer) {\n      return `selected`;\n    }\n  };\n\n  if (!question) {\n    return <div></div>;\n  }\n\n  return (\n    <Card className={classes.question}>\n      <div>\n        Question: {questionIndex} / {questions.length}\n      </div>\n      <h3>{question.question}</h3>\n      <ul>\n        {options.map((option, i) => (\n          <li\n            key={i}\n            onClick={handleListItemClick}\n            className={getClass(option)}\n          >\n            {option}\n          </li>\n        ))}\n      </ul>\n    </Card>\n  );\n}\nexport default Question;\n","import React from \"react\";\n\nimport classes from \"./Button.module.css\";\n\nconst Button = (props) => {\n  return (\n    <button\n      className={classes.button}\n      type={props.type || \"button\"}\n      onClick={props.onClick}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Card from \"../UI/Card\";\nimport Button from \"../UI/Button\";\n\nfunction FetchButton(props) {\n  const dispatch = useDispatch();\n\n  const setLoading = (value) => {\n    dispatch({\n      type: \"CHANGE_LOADING\",\n      loading: value,\n    });\n  };\n  const setQuestions = (value) => {\n    dispatch({\n      type: \"SET_QUESTIONS\",\n      questions: value,\n    });\n  };\n\n  const questionCategory = useSelector(\n    (state) => state.options.question_category\n  );\n  const questionDifficulty = useSelector(\n    (state) => state.options.question_difficulty\n  );\n  const questionType = useSelector((state) => state.options.question_type);\n  const questionAmount = useSelector(\n    (state) => state.options.amount_of_questions\n  );\n  //const questionIndex = useSelector((state) => state.index);\n\n  const handleQuery = async (props) => {\n    dispatch({\n      type: \"SET_QUESTIONS\",\n      questions: [],\n    });\n\n    dispatch({\n      type: \"SET_SCORE\",\n      score: 0,\n    });\n\n    dispatch({\n      type: \"SET_INDEX\",\n      index: 0,\n    });\n\n    let apiUrl = `https://opentdb.com/api.php?amount=${questionAmount}`;\n\n    if (questionCategory.length) {\n      apiUrl = apiUrl.concat(`&category=${questionCategory}`);\n    }\n\n    if (questionDifficulty.length) {\n      apiUrl = apiUrl.concat(`&difficulty=${questionDifficulty}`);\n    }\n\n    if (questionType.length) {\n      apiUrl = apiUrl.concat(`&type=${questionType}`);\n    }\n\n    setLoading(false);\n    await fetch(apiUrl)\n      .then((res) => res.json())\n      .then((response) => {\n        setQuestions(response.results);\n        setLoading(true);\n      });\n  };\n\n  return (\n    <Card>\n      <Button onClick={handleQuery}>{props.text}</Button>\n    </Card>\n  );\n}\nexport default FetchButton;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport FetchButton from \"./FetchButton\";\nimport Card from \"../UI/Card\";\nimport classes from \"./Settings.module.css\";\n\nfunction Settings(props) {\n  const dispatch = useDispatch();\n  const [options, setOptions] = useState(null);\n\n  const loading = useSelector((state) => state.options.loading);\n\n  const questionCategory = useSelector(\n    (state) => state.options.question_category\n  );\n  const questionDifficulty = useSelector(\n    (state) => state.options.question_difficulty\n  );\n  const questionType = useSelector((state) => state.options.question_type);\n  const questionAmount = useSelector(\n    (state) => state.options.amount_of_questions\n  );\n\n  useEffect(() => {\n    const apiUrl = `https://opentdb.com/api_category.php`;\n\n    const handleLoadingChange = (value) => {\n      dispatch({\n        type: \"CHANGE_LOADING\",\n        loading: value,\n      });\n    };\n\n    handleLoadingChange(true);\n\n    fetch(apiUrl)\n      .then((res) => res.json())\n      .then((response) => {\n        handleLoadingChange(false);\n        setOptions(response.trivia_categories);\n      });\n  }, [setOptions, dispatch]);\n\n  const handleCategoryChange = (event) => {\n    dispatch({\n      type: \"CHANGE_CATEGORY\",\n      value: event.target.value,\n    });\n  };\n\n  const handleDifficultyChange = (event) => {\n    dispatch({\n      type: \"CHANGE_DIFFICULTY\",\n      value: event.target.value,\n    });\n  };\n\n  const handleTypeChange = (event) => {\n    dispatch({\n      type: \"CHANGE_TYPE\",\n      value: event.target.value,\n    });\n  };\n\n  const handleAmountChange = (event) => {\n    dispatch({\n      type: \"CHANGE_AMOUNT\",\n      value: event.target.value,\n    });\n  };\n\n  if (!loading) {\n    return (\n      <Card>\n        <div>\n          <h4>Select Category:</h4>\n          <select\n            className={classes.items}\n            value={questionCategory}\n            onChange={handleCategoryChange}\n          >\n            <option>All</option>\n            {options &&\n              options.map((option) => (\n                <option value={option.id} key={option.id}>\n                  {option.name}\n                </option>\n              ))}\n          </select>\n        </div>\n\n        <div>\n          <h4>Select Difficulty:</h4>\n          <select\n            className={classes.items}\n            value={questionDifficulty}\n            onChange={handleDifficultyChange}\n          >\n            <option value=\"\" key=\"difficulty-0\">\n              All\n            </option>\n            <option value=\"easy\" key=\"difficulty-1\">\n              Easy\n            </option>\n            <option value=\"medium\" key=\"difficulty-2\">\n              Medium\n            </option>\n            <option value=\"hard\" key=\"difficulty-3\">\n              Hard\n            </option>\n          </select>\n        </div>\n\n        <div>\n          <h4>Select Question Type:</h4>\n          <select\n            className={classes.items}\n            value={questionType}\n            onChange={handleTypeChange}\n          >\n            <option value=\"\" key=\"type-0\">\n              All\n            </option>\n            <option value=\"multiple\" key=\"type-1\">\n              Multiple Choice\n            </option>\n            <option value=\"boolean\" key=\"type-2\">\n              True/False\n            </option>\n          </select>\n        </div>\n\n        <div>\n          <h4>Amount of Questions:</h4>\n          <input\n            className={classes.item}\n            value={questionAmount}\n            onChange={handleAmountChange}\n          />\n        </div>\n\n        <FetchButton text=\"Get Started\" />\n      </Card>\n    );\n  }\n\n  return <div>asdsa</div>;\n}\nexport default Settings;\n","import { Fragment } from \"react\";\n\nimport MainHeader from \"./Layout/MainHeader\";\nimport FinalScreen from \"./components/FinalScreen\";\nimport Questions from \"./components/Questions\";\nimport Settings from \"./components/Settings\";\n\nfunction App() {\n  return (\n    <Fragment>\n      <MainHeader></MainHeader>\n      <Settings />\n      <Questions></Questions>\n      <FinalScreen></FinalScreen>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport Reducer from \"./components/Reducer\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst store = createStore(Reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"Settings_items__16xEE\",\"item\":\"Settings_item__QG_Ue\"};"],"sourceRoot":""}